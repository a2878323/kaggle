install.packages("Curl")
install.packages("RCurl")
install.packages("XML")
install.packages("RSelenium")
install.packages("stringer")
install.packages("its")
install.packages("xts")
install.packages("reshape2")
library("RSelenium", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
checkForserver()
checkForServer()
startServer()
startServer()
startServer()
startServer()
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
checkForServer()
library("RSelenium", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
checkForServer()
startServer()
startServer()
startServer()
library("RSelenium", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
checkForServer()
startServer()
library("RSelenium", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
checkForserver()
startServer()
library("RSelenium", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
checkForserver()
library("RSelenium", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
checkForServer()
startServer()
startServer()
require(RSelenium)
require(stringr)
require(xts)
require(reshape2)
#checkForServer()
startServer()
remDr <- remoteDriver$new()
remDr$open()
checkForServer()
startServer()
remDr <- remoteDriver$new()
remDr$open()
require(RSelenium)
checkForServer()
startServer()
Sys.sleep(5)
remDr <- remoteDriver()
remDr$open()
library("quantmod", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(quantmod)
get(getSymbols("2330.tw"))
STK=get(getSymbols("2330.tw"))
View(STK)
STK=get(getSymbols("POW00.tw"))
STK=get(getSymbols("^TWII"))
View(STK)
chartSeries(STK)
?quantmod
as.matrix(to.weekly(STK))
names(STK)
plot(STK$TWII.Low)
STK$TWII.Low
STK=as.matrix(to.weekly(STK))
ＳＴＫ
STK
View(STK)
View(STK)
names(STK)
STK[3,3]
STK[,3]
?setNames
numeric(length(rownames(STK)))
numeric(length(rownames(STK)))
length(rownames(STK)
)
numeric(10)
setNames( 1:3, c("foo", "bar", "baz") )
a=setNames( 1:3, c("foo", "bar", "baz") )
names(a)
a$foo
a[1]
a=as.matrix(a)
names(a)
a
a$foo
?numeric
library(quantmod)
STK=get(getSymbols("^TWII"))
STK
?getSymbols
STK2=get(getSymbols("TAIEX",src='google'))
getSymbols('MSFT',src='google') #src:其他資料來源
get(getSymbols("TAIEX"))
STK2=get(getSymbols("TAIEX"))
View(STK)
View(STK2)
a=STK2$TAIEX.Open
a
a1=STK$TWII.Open
a1
a[1]
a[2]
a1[2]
a1[2]/a[1]
19000/2/12/6
2.3/2,3
2.3/2.3
2.3/2.2
279*58/61
275*8/62
554-120-12
534/2
5326/3
2771+2743
5514/2
1508+2245+1388+1328+1446+1229+1508+1737
6260+5912
25000*0.012
3085/3067
4427/1429
1429*3
30*4427
300/132810
2017-1962
560/16
210/6
2041*1.2
148800/3.4
30000/3.4
37800/3.4
16850/3.4
72800/3.4
1/0.27
1/0.27
72800/3.7
83800/3.7
35349*2.1
35349*2.14
2.14/2.4
32+32+32+27
123/4
53*17
47*17
2200*12
2.6+1.5+1.6
51*17
90/14
install.packages("ggplot2")
library('ggplot2') # visualization
install.packages("ggthemes")
library('ggthemes') # visualization
install.packages("scales")
library('scales') # visualization
install.packages("dplyr")
install.packages("scales")
618/2.8333
348+90-50
3130+1510+780+3096+2998+2275+1518
91803+1648
93451*2.1
75000/300
56000*17.5
52500+2200
31000/12
54700+2600
57000*17.5
125000/997500
1250000/997500
53000/30/8
400/6
#資料視覺化
library(ggplot2)
library(ggthemes)
library(scales)
library(gridExtra)
#資料整理
library(dplyr) # data manipulation
#補遺失值
library(mice) # imputation
#機器學習模型
library(randomForest) # 隨機森林
library(rpart) #決策樹
library(nnet) #類神經網路
library(neuralnet) #類神經網路
library(e1071) #SVM
library(gbm) #GBM
library(kernlab) #SVM
library(klaR)
library(VGAM)
#模型訓練
library(caret)
library(class)
library(caTools)
#讀取資料
rm(list = ls())
setwd("~/Documents/Kaggle/Prudential Life Insurance Assessment")
train=read.csv("train.csv",header=T,stringsAsFactors = F)
test=read.csv("test.csv",header=T,stringsAsFactors = F)
train$flag="train"
test$flag="test"
all=bind_rows(train,test)
attach(all)
trControl <- trainControl(method="repeatedcv", number=7, repeats=5);
#取出欄位名
col=names(all)
#單因子迴歸檢視變數是否重要
a=c();b=c()
for(x in 1:length(col))
{
a[x]=length(which(is.na(all[,x])==1))
b[x]=col[x]
}
check=cbind(a,b)
all$Employment_Info_1[which(is.na(all$Employment_Info_1)==1)]=0
all=all[,-which(a>100)[1:12]]
all$Product_Info_2=factor(all$Product_Info_2)
rf_model <- train(factor(Response) ~ Product_Info_1+Product_Info_2 +Product_Info_3+
Product_Info_4+Product_Info_5+Product_Info_6+Product_Info_7+
Ins_Age+Ht+ Wt +BMI+
Employment_Info_1+ Employment_Info_2+ Employment_Info_3+ Employment_Info_5+
InsuredInfo_1+ InsuredInfo_2+ InsuredInfo_3+ InsuredInfo_4+
InsuredInfo_5+ InsuredInfo_6+ InsuredInfo_7+ Insurance_History_1+
Insurance_History_2 +Insurance_History_3 +Insurance_History_4 +Insurance_History_7+
Insurance_History_8 +Insurance_History_9 +Family_Hist_1+ Medical_History_2+
Medical_History_3+ Medical_History_4+ Medical_History_5+ Medical_History_6+
Medical_History_7+ Medical_History_8+ Medical_History_9+ Medical_History_11+
Medical_History_12+Medical_History_13+Medical_History_14+Medical_History_16+
Medical_History_17+Medical_History_18+Medical_History_19+Medical_History_20+
Medical_History_21+Medical_History_22+Medical_History_23+Medical_History_25+
Medical_History_26+Medical_History_27+Medical_History_28+Medical_History_29+
Medical_History_30+Medical_History_31+Medical_History_33+Medical_History_34+
Medical_History_35+Medical_History_36+Medical_History_37+Medical_History_38+
Medical_History_39+Medical_History_40+Medical_History_41+Medical_Keyword_1+
Medical_Keyword_2+ Medical_Keyword_3+ Medical_Keyword_4+ Medical_Keyword_5+
Medical_Keyword_6+ Medical_Keyword_7+ Medical_Keyword_8+ Medical_Keyword_9+
Medical_Keyword_10+Medical_Keyword_11+Medical_Keyword_12+Medical_Keyword_13+
Medical_Keyword_14+Medical_Keyword_15+Medical_Keyword_16+Medical_Keyword_17+
Medical_Keyword_18+Medical_Keyword_19+Medical_Keyword_20+Medical_Keyword_21+
Medical_Keyword_22+Medical_Keyword_23+Medical_Keyword_24+Medical_Keyword_25+
Medical_Keyword_26+Medical_Keyword_27+Medical_Keyword_28+Medical_Keyword_29+
Medical_Keyword_30 +Medical_Keyword_31+Medical_Keyword_32+Medical_Keyword_33+
Medical_Keyword_34 +Medical_Keyword_35+Medical_Keyword_36+Medical_Keyword_37+
Medical_Keyword_38 +Medical_Keyword_39+Medical_Keyword_40+Medical_Keyword_41+
Medical_Keyword_42 +Medical_Keyword_43+Medical_Keyword_44+Medical_Keyword_45+
Medical_Keyword_46 +Medical_Keyword_47+Medical_Keyword_48, data = all %>% filter(flag=="train"), metric="Accuracy", trControl = trControl, method = "rf");
trControl <- trainControl(method="repeatedcv", number=3, repeats=5);
rf_model <- train(factor(Response) ~ Product_Info_1+Product_Info_2 +Product_Info_3+
Product_Info_4+Product_Info_5+Product_Info_6+Product_Info_7+
Ins_Age+Ht+ Wt +BMI+
Employment_Info_1+ Employment_Info_2+ Employment_Info_3+ Employment_Info_5+
InsuredInfo_1+ InsuredInfo_2+ InsuredInfo_3+ InsuredInfo_4+
InsuredInfo_5+ InsuredInfo_6+ InsuredInfo_7+ Insurance_History_1+
Insurance_History_2 +Insurance_History_3 +Insurance_History_4 +Insurance_History_7+
Insurance_History_8 +Insurance_History_9 +Family_Hist_1+ Medical_History_2+
Medical_History_3+ Medical_History_4+ Medical_History_5+ Medical_History_6+
Medical_History_7+ Medical_History_8+ Medical_History_9+ Medical_History_11+
Medical_History_12+Medical_History_13+Medical_History_14+Medical_History_16+
Medical_History_17+Medical_History_18+Medical_History_19+Medical_History_20+
Medical_History_21+Medical_History_22+Medical_History_23+Medical_History_25+
Medical_History_26+Medical_History_27+Medical_History_28+Medical_History_29+
Medical_History_30+Medical_History_31+Medical_History_33+Medical_History_34+
Medical_History_35+Medical_History_36+Medical_History_37+Medical_History_38+
Medical_History_39+Medical_History_40+Medical_History_41+Medical_Keyword_1+
Medical_Keyword_2+ Medical_Keyword_3+ Medical_Keyword_4+ Medical_Keyword_5+
Medical_Keyword_6+ Medical_Keyword_7+ Medical_Keyword_8+ Medical_Keyword_9+
Medical_Keyword_10+Medical_Keyword_11+Medical_Keyword_12+Medical_Keyword_13+
Medical_Keyword_14+Medical_Keyword_15+Medical_Keyword_16+Medical_Keyword_17+
Medical_Keyword_18+Medical_Keyword_19+Medical_Keyword_20+Medical_Keyword_21+
Medical_Keyword_22+Medical_Keyword_23+Medical_Keyword_24+Medical_Keyword_25+
Medical_Keyword_26+Medical_Keyword_27+Medical_Keyword_28+Medical_Keyword_29+
Medical_Keyword_30 +Medical_Keyword_31+Medical_Keyword_32+Medical_Keyword_33+
Medical_Keyword_34 +Medical_Keyword_35+Medical_Keyword_36+Medical_Keyword_37+
Medical_Keyword_38 +Medical_Keyword_39+Medical_Keyword_40+Medical_Keyword_41+
Medical_Keyword_42 +Medical_Keyword_43+Medical_Keyword_44+Medical_Keyword_45+
Medical_Keyword_46 +Medical_Keyword_47+Medical_Keyword_48, data = all %>% filter(flag=="train"), metric="Accuracy", trControl = trControl, method = "rf");
