mean(model2$err.rate)
model2
install.packages("rpart.plot")
install.packages("rattle")
sapply(full$Name,function(x) strsplit(x,"[,.]")[[1]][1]
)
full$FamilyN=sapply(full$Name,function(x) strsplit(x,"[,.]")[[1]][1]
full$FamilyN=sapply(full$Name,function(x) strsplit(x,"[,.]")[[1]][1])
full$FamilyN
p1=data.frame(table(full$FamilyN))
p1
colnames(p1)[colnames(p1) == 'Var1'] <- 'FamilyN'
colnames(p1)[colnames(p1) == 'Var1'] <- 'FamilyNumber'
merge(full,p1,by="FamilyN")
full2=merge(full,p1,by="FamilyN")
View(full2)
p1
p1=data.frame(table(full$FamilyN))
colnames(p1)[colnames(p1) == 'Var1'] <- 'FamilyN'
colnames(p1)[colnames(p1) == 'Freq'] <- 'FamilyNumber'
names(p1)
full=merge(full,p1,by="FamilyN")
full$Familyflag=sapply(full$FamilyNumber function(x) ifelse(x>1,1,0))
full$Familyflag=sapply(full$FamilyNumber ,function(x) ifelse(x>1,1,0))
table(Familyflag)
table(full$Familyflag)
p2=data.frame(table(full$Ticket))
colnames(p2)[colnames(p2) == 'Var1'] <- 'TicketN'
colnames(p2)[colnames(p2) == 'Freq'] <- 'TicketNumber'
full=merge(full,p2,by="Ticket")
p2=data.frame(table(full$Ticket))
colnames(p2)[colnames(p2) == 'Var1'] <- 'Ticket'
colnames(p2)[colnames(p2) == 'Freq'] <- 'TicketNumber'
full=merge(full,p2,by="Ticket")
full$Ticketflag=sapply(full$TicketNumber ,function(x) ifelse(x>1,1,0))
full$groupflag=ifelse(full$Ticketflag=1 or full$Familyflag=1,1,0)
full$groupflag=ifelse(full$Ticketflag==1 or full$Familyflag==1,1,0)
full$groupflag=ifelse((full$Ticketflag=1 or full$Familyflag=1),1,0)
full$groupflag=ifelse((full$Ticketflag+full$Familyflag>0),1,0)
table(full$Ticketflag,full$groupflag)
table(full$Familyflag,full$groupflag)
train=read.csv("train.csv",header=T,stringsAsFactors = F)
test=read.csv("test.csv",header=T,stringsAsFactors = F)
train$flag="train"
test$flag="test"
full=bind_rows(train,test)
str(full)
summary(full)
attach(full)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
#For example, Collins, Mr. John (.,) is checking for the part before the comma followed by a space . IT will select Collins, (\..) is looking for string after DOT(Including DOT) .
#IT will select .John so you are just left with Mr
#full$Title<- sapply(full$Name,function(x) strsplit(x, split = '[,.]')[[1]][2])
table(full$Sex, full$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
full$Title[full$Title == 'Mlle']        <- 'Miss'
full$Title[full$Title == 'Ms']          <- 'Miss'
full$Title[full$Title == 'Mme']         <- 'Mrs'
full$Title[full$Title %in% rare_title]  <- 'Rare Title'
table(full$Sex, full$Title)
full$Surname <- sapply(full$Name,function(x) strsplit(x, split = '[,.]')[[1]][1])
full$Fsize <- full$SibSp + full$Parch + 1
full$Family <- paste(full$Surname, full$Fsize, sep='_')
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:11)) +
labs(x = 'Family Size') +
theme_few()
full$FsizeD[full$Fsize == 1] <- 'singleton'
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
full$FsizeD[full$Fsize > 4] <- 'large'
full$Fsizemy[full$Fsize == 1] <- 'singleton'
full$Fsizemy[full$Fsize <= 4 & full$Fsize >=2] <- 'small'
full$Fsizemy[full$Fsize <= 7 & full$Fsize >=5] <- 'large'
full$Fsizemy[full$Fsize >=8] <- 'huge'
mosaicplot(table(full$FsizeD, full$Survived), main='Family Size by Survival', shade=TRUE)
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
full$Embarked[c(62, 830)] <- 'C'
ggplot(full[full$Pclass == '3' & full$Embarked == 'S', ],
aes(x = Fare)) +
geom_density(fill = '#99d6ff', alpha=0.4) +
geom_vline(aes(xintercept=median(Fare, na.rm=T)),
colour='red', linetype='dashed', lwd=1) +
scale_x_continuous(labels=dollar_format()) +
theme_few()
full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)
factor_vars <- c('PassengerId','Pclass','Sex','Embarked',
'Title','Surname','Family','FsizeD')
mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Family','Surname','Survived')], method='rf')
mice_output <- complete(mice_mod)
par(mfrow=c(1,2))
hist(full$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(mice_output$Age, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
full$Age <- mice_output$Age
full$Child[full$Age < 18] <- 'Child'
full$Child[full$Age >= 18] <- 'Adult'
full$Mother <- 'Not Mother'
full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <- 'Mother'
full$Child  <- factor(full$Child)
full$Mother <- factor(full$Mother)
full$FamilyN=sapply(full$Name,function(x) strsplit(x,"[,.]")[[1]][1])
p1=data.frame(table(full$FamilyN))
colnames(p1)[colnames(p1) == 'Var1'] <- 'FamilyN'
colnames(p1)[colnames(p1) == 'Freq'] <- 'FamilyNumber'
full=merge(full,p1,by="FamilyN")
full$Familyflag=sapply(full$FamilyNumber ,function(x) ifelse(x>1,1,0))
p2=data.frame(table(full$Ticket))
colnames(p2)[colnames(p2) == 'Var1'] <- 'Ticket'
colnames(p2)[colnames(p2) == 'Freq'] <- 'TicketNumber'
full=merge(full,p2,by="Ticket")
full$Ticketflag=sapply(full$TicketNumber ,function(x) ifelse(x>1,1,0))
full$groupflag=ifelse((full$Ticketflag+full$Familyflag>0),1,0)
View(full)
full$Tickethead=substr(full$Ticket,1,1)
md.pattern(full)
warnings()
train <- full[which(flag=="train"),]
test <- full[which(flag=="train"),]
test <- full[which(flag=="test"),]
full=data.frame(full)
full
Name
full$Name
train <- full[which(flag=="train"),]
test <- full[which(flag=="test"),]
check=function(x)
{
p=predict(x,train,type="class")
s=full$Survived[1:891]
sum(p==s)/length(s)
}
model1=randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
View(p2)
View(train)
train <- full[which(flag=="train"),]
table(train$Survived)
train$Survived
train=read.csv("train.csv",header=T,stringsAsFactors = F)
test=read.csv("test.csv",header=T,stringsAsFactors = F)
train$flag="train"
test$flag="test"
View(train)
View(test)
full=bind_rows(train,test)
View(full)
train <- full[which(flag=="train"),]
View(train)
train=read.csv("train.csv",header=T,stringsAsFactors = F)
test=read.csv("test.csv",header=T,stringsAsFactors = F)
train$flag="train"
test$flag="test"
full=bind_rows(train,test)
str(full)
summary(full)
attach(full)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
#For example, Collins, Mr. John (.,) is checking for the part before the comma followed by a space . IT will select Collins, (\..) is looking for string after DOT(Including DOT) .
#IT will select .John so you are just left with Mr
#full$Title<- sapply(full$Name,function(x) strsplit(x, split = '[,.]')[[1]][2])
table(full$Sex, full$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
full$Title[full$Title == 'Mlle']        <- 'Miss'
full$Title[full$Title == 'Ms']          <- 'Miss'
full$Title[full$Title == 'Mme']         <- 'Mrs'
full$Title[full$Title %in% rare_title]  <- 'Rare Title'
table(full$Sex, full$Title)
full$Surname <- sapply(full$Name,function(x) strsplit(x, split = '[,.]')[[1]][1])
full$Fsize <- full$SibSp + full$Parch + 1
full$Family <- paste(full$Surname, full$Fsize, sep='_')
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:11)) +
labs(x = 'Family Size') +
theme_few()
full$FsizeD[full$Fsize == 1] <- 'singleton'
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
full$FsizeD[full$Fsize > 4] <- 'large'
full$Fsizemy[full$Fsize == 1] <- 'singleton'
full$Fsizemy[full$Fsize <= 4 & full$Fsize >=2] <- 'small'
full$Fsizemy[full$Fsize <= 7 & full$Fsize >=5] <- 'large'
full$Fsizemy[full$Fsize >=8] <- 'huge'
mosaicplot(table(full$FsizeD, full$Survived), main='Family Size by Survival', shade=TRUE)
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
full$Embarked[c(62, 830)] <- 'C'
ggplot(full[full$Pclass == '3' & full$Embarked == 'S', ],
aes(x = Fare)) +
geom_density(fill = '#99d6ff', alpha=0.4) +
geom_vline(aes(xintercept=median(Fare, na.rm=T)),
colour='red', linetype='dashed', lwd=1) +
scale_x_continuous(labels=dollar_format()) +
theme_few()
full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)
factor_vars <- c('PassengerId','Pclass','Sex','Embarked',
'Title','Surname','Family','FsizeD')
mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Family','Surname','Survived')], method='rf')
mice_output <- complete(mice_mod)
par(mfrow=c(1,2))
hist(full$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(mice_output$Age, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
full$Age <- mice_output$Age
full$Child[full$Age < 18] <- 'Child'
full$Child[full$Age >= 18] <- 'Adult'
full$Mother <- 'Not Mother'
full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <- 'Mother'
full$Child  <- factor(full$Child)
full$Mother <- factor(full$Mother)
full$FamilyN=sapply(full$Name,function(x) strsplit(x,"[,.]")[[1]][1])
p1=data.frame(table(full$FamilyN))
colnames(p1)[colnames(p1) == 'Var1'] <- 'FamilyN'
colnames(p1)[colnames(p1) == 'Freq'] <- 'FamilyNumber'
full=merge(full,p1,by="FamilyN")
full$Familyflag=sapply(full$FamilyNumber ,function(x) ifelse(x>1,1,0))
p2=data.frame(table(full$Ticket))
colnames(p2)[colnames(p2) == 'Var1'] <- 'Ticket'
colnames(p2)[colnames(p2) == 'Freq'] <- 'TicketNumber'
full=merge(full,p2,by="Ticket")
full$Ticketflag=sapply(full$TicketNumber ,function(x) ifelse(x>1,1,0))
full$groupflag=ifelse((full$Ticketflag+full$Familyflag>0),1,0)
full$Tickethead=substr(full$Ticket,1,1)
View(full)
md.pattern(full)
?md.pattern
warnings()
full=data.frame(full)
train <- full[which(flag=="train"),]
table(train$Survived)
train$Survived
View(full)
View(train)
train <- full[which(full$flag=="train"),]
table(train$Survived)
test <- full[which(full$flag=="test"),]
check=function(x)
{
p=predict(x,train,type="class")
s=train$Survived
sum(p==s)/length(s)
}
model1=randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
str(train)
summary(train)
md.pattern(full)
Sex
attach(train)
View(train)
Pclass
Sex
Age
FsizeD
a=function(x)
{which(is.na(x))}
a=function(x)
{which(is.na(train$x))}
a(Pclass)
a(Sex)
write.csv("why.csv",train)
write.csv(train,"why.csv")
factor(Survived)
data = train)
a=function(x)
{factor(train$x))}
a(Sex)
factor(Sex)
factor(Age)
factor(SibSp)
factor(Parch)
factor(Embarked)
factor(Title)
factor(FsizeD)
factor(Child)
factor(Mother)
factor(Fare)
which(is.na(Age))
which(is.na(Fare))
factor(Survived)
randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
model1=randomForest(factor(Survived) ~ Pclass,
model1=randomForest(factor(Survived) ~ Pclass,
model1=randomForest(factor(Survived) ~ Pclass ,
data = train)
model1=randomForest(factor(Survived) ~ Pclass + Sex
data = train)
model1=randomForest(factor(Survived) ~ Pclass + Sex
data = train)
model1=randomForest(factor(Survived) ~ Pclass + Sex,
data = train)
model1=randomForest(factor(Survived) ~ Pclass  + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
model1=randomForest(factor(Survived) ~ Sex,data = train)
model1=randomForest(factor(Survived) ~ factor(Sex),data = train)
lm(list=all)
rm(list=all)
rm(list = ls())
test=read.csv("test.csv",header=T,stringsAsFactors = F)
train$flag="train"
test$flag="test"
full=bind_rows(train,test)
str(full)
summary(full)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
#For example, Collins, Mr. John (.,) is checking for the part before the comma followed by a space . IT will select Collins, (\..) is looking for string after DOT(Including DOT) .
#IT will select .John so you are just left with Mr
#full$Title<- sapply(full$Name,function(x) strsplit(x, split = '[,.]')[[1]][2])
table(full$Sex, full$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
full$Title[full$Title == 'Mlle']        <- 'Miss'
full$Title[full$Title == 'Ms']          <- 'Miss'
full$Title[full$Title == 'Mme']         <- 'Mrs'
full$Title[full$Title %in% rare_title]  <- 'Rare Title'
table(full$Sex, full$Title)
full$Surname <- sapply(full$Name,function(x) strsplit(x, split = '[,.]')[[1]][1])
full$Fsize <- full$SibSp + full$Parch + 1
full$Family <- paste(full$Surname, full$Fsize, sep='_')
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:11)) +
labs(x = 'Family Size') +
theme_few()
full$FsizeD[full$Fsize == 1] <- 'singleton'
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
full$FsizeD[full$Fsize > 4] <- 'large'
full$Fsizemy[full$Fsize == 1] <- 'singleton'
full$Fsizemy[full$Fsize <= 4 & full$Fsize >=2] <- 'small'
full$Fsizemy[full$Fsize <= 7 & full$Fsize >=5] <- 'large'
full$Fsizemy[full$Fsize >=8] <- 'huge'
mosaicplot(table(full$FsizeD, full$Survived), main='Family Size by Survival', shade=TRUE)
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
full$Embarked[c(62, 830)] <- 'C'
ggplot(full[full$Pclass == '3' & full$Embarked == 'S', ],
aes(x = Fare)) +
geom_density(fill = '#99d6ff', alpha=0.4) +
geom_vline(aes(xintercept=median(Fare, na.rm=T)),
colour='red', linetype='dashed', lwd=1) +
scale_x_continuous(labels=dollar_format()) +
theme_few()
full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)
factor_vars <- c('PassengerId','Pclass','Sex','Embarked',
'Title','Surname','Family','FsizeD')
mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Family','Surname','Survived')], method='rf')
mice_output <- complete(mice_mod)
par(mfrow=c(1,2))
hist(full$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(mice_output$Age, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
full$Age <- mice_output$Age
full$Child[full$Age < 18] <- 'Child'
full$Child[full$Age >= 18] <- 'Adult'
full$Mother <- 'Not Mother'
full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <- 'Mother'
full$Child  <- factor(full$Child)
full$Mother <- factor(full$Mother)
full$FamilyN=sapply(full$Name,function(x) strsplit(x,"[,.]")[[1]][1])
p1=data.frame(table(full$FamilyN))
colnames(p1)[colnames(p1) == 'Var1'] <- 'FamilyN'
colnames(p1)[colnames(p1) == 'Freq'] <- 'FamilyNumber'
full=merge(full,p1,by="FamilyN")
full$Familyflag=sapply(full$FamilyNumber ,function(x) ifelse(x>1,1,0))
p2=data.frame(table(full$Ticket))
colnames(p2)[colnames(p2) == 'Var1'] <- 'Ticket'
colnames(p2)[colnames(p2) == 'Freq'] <- 'TicketNumber'
full=merge(full,p2,by="Ticket")
full$Ticketflag=sapply(full$TicketNumber ,function(x) ifelse(x>1,1,0))
full$groupflag=ifelse((full$Ticketflag+full$Familyflag>0),1,0)
full$Tickethead=substr(full$Ticket,1,1)
md.pattern(full)
rm(list = ls())
setwd("~/Documents/Kaggle/Titanic")
train=read.csv("train.csv",header=T,stringsAsFactors = F)
test=read.csv("test.csv",header=T,stringsAsFactors = F)
train$flag="train"
test$flag="test"
full=bind_rows(train,test)
str(full)
summary(full)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
#For example, Collins, Mr. John (.,) is checking for the part before the comma followed by a space . IT will select Collins, (\..) is looking for string after DOT(Including DOT) .
#IT will select .John so you are just left with Mr
#full$Title<- sapply(full$Name,function(x) strsplit(x, split = '[,.]')[[1]][2])
table(full$Sex, full$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
full$Title[full$Title == 'Mlle']        <- 'Miss'
full$Title[full$Title == 'Ms']          <- 'Miss'
full$Title[full$Title == 'Mme']         <- 'Mrs'
full$Title[full$Title %in% rare_title]  <- 'Rare Title'
table(full$Sex, full$Title)
full$Surname <- sapply(full$Name,function(x) strsplit(x, split = '[,.]')[[1]][1])
full$Fsize <- full$SibSp + full$Parch + 1
full$Family <- paste(full$Surname, full$Fsize, sep='_')
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:11)) +
labs(x = 'Family Size') +
theme_few()
full$FsizeD[full$Fsize == 1] <- 'singleton'
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
full$FsizeD[full$Fsize > 4] <- 'large'
full$Fsizemy[full$Fsize == 1] <- 'singleton'
full$Fsizemy[full$Fsize <= 4 & full$Fsize >=2] <- 'small'
full$Fsizemy[full$Fsize <= 7 & full$Fsize >=5] <- 'large'
full$Fsizemy[full$Fsize >=8] <- 'huge'
mosaicplot(table(full$FsizeD, full$Survived), main='Family Size by Survival', shade=TRUE)
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
full$Embarked[c(62, 830)] <- 'C'
ggplot(full[full$Pclass == '3' & full$Embarked == 'S', ],
aes(x = Fare)) +
geom_density(fill = '#99d6ff', alpha=0.4) +
geom_vline(aes(xintercept=median(Fare, na.rm=T)),
colour='red', linetype='dashed', lwd=1) +
scale_x_continuous(labels=dollar_format()) +
theme_few()
full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)
factor_vars <- c('PassengerId','Pclass','Sex','Embarked',
'Title','Surname','Family','FsizeD')
mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Family','Surname','Survived')], method='rf')
mice_output <- complete(mice_mod)
par(mfrow=c(1,2))
hist(full$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(mice_output$Age, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
full$Age <- mice_output$Age
full$Child[full$Age < 18] <- 'Child'
full$Child[full$Age >= 18] <- 'Adult'
full$Mother <- 'Not Mother'
full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <- 'Mother'
full$Child  <- factor(full$Child)
full$Mother <- factor(full$Mother)
full$FamilyN=sapply(full$Name,function(x) strsplit(x,"[,.]")[[1]][1])
p1=data.frame(table(full$FamilyN))
colnames(p1)[colnames(p1) == 'Var1'] <- 'FamilyN'
colnames(p1)[colnames(p1) == 'Freq'] <- 'FamilyNumber'
full=merge(full,p1,by="FamilyN")
full$Familyflag=sapply(full$FamilyNumber ,function(x) ifelse(x>1,1,0))
p2=data.frame(table(full$Ticket))
colnames(p2)[colnames(p2) == 'Var1'] <- 'Ticket'
colnames(p2)[colnames(p2) == 'Freq'] <- 'TicketNumber'
full=merge(full,p2,by="Ticket")
full$Ticketflag=sapply(full$TicketNumber ,function(x) ifelse(x>1,1,0))
full$groupflag=ifelse((full$Ticketflag+full$Familyflag>0),1,0)
full$Tickethead=substr(full$Ticket,1,1)
md.pattern(full)
full=data.frame(full)
train <- full[which(full$flag=="train"),]
table(train$Survived)
test <- full[which(full$flag=="test"),]
check=function(x)
{
p=predict(x,train,type="class")
s=train$Survived
sum(p==s)/length(s)
}
model1=randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
Pclass
